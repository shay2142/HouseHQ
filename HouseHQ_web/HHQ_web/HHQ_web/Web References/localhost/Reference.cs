//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HHQ_web.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getAllAppsForUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback runAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllAppsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback allAppsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAppsFromUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAppForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback allUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAppsToServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAppsForServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllAppsOnPCOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::HHQ_web.Properties.Settings.Default.HHQ_web_localhost_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getAllAppsForUsersCompletedEventHandler getAllAppsForUsersCompleted;
        
        /// <remarks/>
        public event runAppCompletedEventHandler runAppCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event getAllAppsForUserCompletedEventHandler getAllAppsForUserCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event getDBCompletedEventHandler getDBCompleted;
        
        /// <remarks/>
        public event getLogsCompletedEventHandler getLogsCompleted;
        
        /// <remarks/>
        public event createUsersCompletedEventHandler createUsersCompleted;
        
        /// <remarks/>
        public event changeAccountCompletedEventHandler changeAccountCompleted;
        
        /// <remarks/>
        public event allAppsCompletedEventHandler allAppsCompleted;
        
        /// <remarks/>
        public event deleteAppsFromUserCompletedEventHandler deleteAppsFromUserCompleted;
        
        /// <remarks/>
        public event addAppForUserCompletedEventHandler addAppForUserCompleted;
        
        /// <remarks/>
        public event deleteUserCompletedEventHandler deleteUserCompleted;
        
        /// <remarks/>
        public event allUsersCompletedEventHandler allUsersCompleted;
        
        /// <remarks/>
        public event getUserInformationCompletedEventHandler getUserInformationCompleted;
        
        /// <remarks/>
        public event addAppsToServerCompletedEventHandler addAppsToServerCompleted;
        
        /// <remarks/>
        public event deleteAppsForServerCompletedEventHandler deleteAppsForServerCompleted;
        
        /// <remarks/>
        public event getAllAppsOnPCCompletedEventHandler getAllAppsOnPCCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllAppsForUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getAllAppsForUsers(string ipServer, string userName, string password) {
            object[] results = this.Invoke("getAllAppsForUsers", new object[] {
                        ipServer,
                        userName,
                        password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllAppsForUsersAsync(string ipServer, string userName, string password) {
            this.getAllAppsForUsersAsync(ipServer, userName, password, null);
        }
        
        /// <remarks/>
        public void getAllAppsForUsersAsync(string ipServer, string userName, string password, object userState) {
            if ((this.getAllAppsForUsersOperationCompleted == null)) {
                this.getAllAppsForUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAppsForUsersOperationCompleted);
            }
            this.InvokeAsync("getAllAppsForUsers", new object[] {
                        ipServer,
                        userName,
                        password}, this.getAllAppsForUsersOperationCompleted, userState);
        }
        
        private void OngetAllAppsForUsersOperationCompleted(object arg) {
            if ((this.getAllAppsForUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAppsForUsersCompleted(this, new getAllAppsForUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/runApp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string runApp(string ipServer, string userName, string password, string appName) {
            object[] results = this.Invoke("runApp", new object[] {
                        ipServer,
                        userName,
                        password,
                        appName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void runAppAsync(string ipServer, string userName, string password, string appName) {
            this.runAppAsync(ipServer, userName, password, appName, null);
        }
        
        /// <remarks/>
        public void runAppAsync(string ipServer, string userName, string password, string appName, object userState) {
            if ((this.runAppOperationCompleted == null)) {
                this.runAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunAppOperationCompleted);
            }
            this.InvokeAsync("runApp", new object[] {
                        ipServer,
                        userName,
                        password,
                        appName}, this.runAppOperationCompleted, userState);
        }
        
        private void OnrunAppOperationCompleted(object arg) {
            if ((this.runAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runAppCompleted(this, new runAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WS_Login login(string ip, string userName, string password) {
            object[] results = this.Invoke("login", new object[] {
                        ip,
                        userName,
                        password});
            return ((WS_Login)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string ip, string userName, string password) {
            this.loginAsync(ip, userName, password, null);
        }
        
        /// <remarks/>
        public void loginAsync(string ip, string userName, string password, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        ip,
                        userName,
                        password}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllAppsForUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public getAllApps getAllAppsForUser(string ip, string userName) {
            object[] results = this.Invoke("getAllAppsForUser", new object[] {
                        ip,
                        userName});
            return ((getAllApps)(results[0]));
        }
        
        /// <remarks/>
        public void getAllAppsForUserAsync(string ip, string userName) {
            this.getAllAppsForUserAsync(ip, userName, null);
        }
        
        /// <remarks/>
        public void getAllAppsForUserAsync(string ip, string userName, object userState) {
            if ((this.getAllAppsForUserOperationCompleted == null)) {
                this.getAllAppsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAppsForUserOperationCompleted);
            }
            this.InvokeAsync("getAllAppsForUser", new object[] {
                        ip,
                        userName}, this.getAllAppsForUserOperationCompleted, userState);
        }
        
        private void OngetAllAppsForUserOperationCompleted(object arg) {
            if ((this.getAllAppsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAppsForUserCompleted(this, new getAllAppsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/logout", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string logout(string ip, string userName) {
            object[] results = this.Invoke("logout", new object[] {
                        ip,
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void logoutAsync(string ip, string userName) {
            this.logoutAsync(ip, userName, null);
        }
        
        /// <remarks/>
        public void logoutAsync(string ip, string userName, object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                        ip,
                        userName}, this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new logoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public jsonSentDB getDB(string ip) {
            object[] results = this.Invoke("getDB", new object[] {
                        ip});
            return ((jsonSentDB)(results[0]));
        }
        
        /// <remarks/>
        public void getDBAsync(string ip) {
            this.getDBAsync(ip, null);
        }
        
        /// <remarks/>
        public void getDBAsync(string ip, object userState) {
            if ((this.getDBOperationCompleted == null)) {
                this.getDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDBOperationCompleted);
            }
            this.InvokeAsync("getDB", new object[] {
                        ip}, this.getDBOperationCompleted, userState);
        }
        
        private void OngetDBOperationCompleted(object arg) {
            if ((this.getDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDBCompleted(this, new getDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLogs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public jsonSentLogs getLogs(string ip) {
            object[] results = this.Invoke("getLogs", new object[] {
                        ip});
            return ((jsonSentLogs)(results[0]));
        }
        
        /// <remarks/>
        public void getLogsAsync(string ip) {
            this.getLogsAsync(ip, null);
        }
        
        /// <remarks/>
        public void getLogsAsync(string ip, object userState) {
            if ((this.getLogsOperationCompleted == null)) {
                this.getLogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLogsOperationCompleted);
            }
            this.InvokeAsync("getLogs", new object[] {
                        ip}, this.getLogsOperationCompleted, userState);
        }
        
        private void OngetLogsOperationCompleted(object arg) {
            if ((this.getLogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLogsCompleted(this, new getLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string createUsers(string ip, string userName, string password, string mail, string levelKey) {
            object[] results = this.Invoke("createUsers", new object[] {
                        ip,
                        userName,
                        password,
                        mail,
                        levelKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createUsersAsync(string ip, string userName, string password, string mail, string levelKey) {
            this.createUsersAsync(ip, userName, password, mail, levelKey, null);
        }
        
        /// <remarks/>
        public void createUsersAsync(string ip, string userName, string password, string mail, string levelKey, object userState) {
            if ((this.createUsersOperationCompleted == null)) {
                this.createUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateUsersOperationCompleted);
            }
            this.InvokeAsync("createUsers", new object[] {
                        ip,
                        userName,
                        password,
                        mail,
                        levelKey}, this.createUsersOperationCompleted, userState);
        }
        
        private void OncreateUsersOperationCompleted(object arg) {
            if ((this.createUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createUsersCompleted(this, new createUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/changeAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string changeAccount(string ip, string userName, string oldPassword, string newPassword, string mail, string level) {
            object[] results = this.Invoke("changeAccount", new object[] {
                        ip,
                        userName,
                        oldPassword,
                        newPassword,
                        mail,
                        level});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void changeAccountAsync(string ip, string userName, string oldPassword, string newPassword, string mail, string level) {
            this.changeAccountAsync(ip, userName, oldPassword, newPassword, mail, level, null);
        }
        
        /// <remarks/>
        public void changeAccountAsync(string ip, string userName, string oldPassword, string newPassword, string mail, string level, object userState) {
            if ((this.changeAccountOperationCompleted == null)) {
                this.changeAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeAccountOperationCompleted);
            }
            this.InvokeAsync("changeAccount", new object[] {
                        ip,
                        userName,
                        oldPassword,
                        newPassword,
                        mail,
                        level}, this.changeAccountOperationCompleted, userState);
        }
        
        private void OnchangeAccountOperationCompleted(object arg) {
            if ((this.changeAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeAccountCompleted(this, new changeAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/allApps", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public getAllApps allApps(string ip) {
            object[] results = this.Invoke("allApps", new object[] {
                        ip});
            return ((getAllApps)(results[0]));
        }
        
        /// <remarks/>
        public void allAppsAsync(string ip) {
            this.allAppsAsync(ip, null);
        }
        
        /// <remarks/>
        public void allAppsAsync(string ip, object userState) {
            if ((this.allAppsOperationCompleted == null)) {
                this.allAppsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallAppsOperationCompleted);
            }
            this.InvokeAsync("allApps", new object[] {
                        ip}, this.allAppsOperationCompleted, userState);
        }
        
        private void OnallAppsOperationCompleted(object arg) {
            if ((this.allAppsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allAppsCompleted(this, new allAppsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAppsFromUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string deleteAppsFromUser(string ip, string userName, string appName) {
            object[] results = this.Invoke("deleteAppsFromUser", new object[] {
                        ip,
                        userName,
                        appName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAppsFromUserAsync(string ip, string userName, string appName) {
            this.deleteAppsFromUserAsync(ip, userName, appName, null);
        }
        
        /// <remarks/>
        public void deleteAppsFromUserAsync(string ip, string userName, string appName, object userState) {
            if ((this.deleteAppsFromUserOperationCompleted == null)) {
                this.deleteAppsFromUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAppsFromUserOperationCompleted);
            }
            this.InvokeAsync("deleteAppsFromUser", new object[] {
                        ip,
                        userName,
                        appName}, this.deleteAppsFromUserOperationCompleted, userState);
        }
        
        private void OndeleteAppsFromUserOperationCompleted(object arg) {
            if ((this.deleteAppsFromUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAppsFromUserCompleted(this, new deleteAppsFromUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addAppForUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string addAppForUser(string ip, string userName, string appName) {
            object[] results = this.Invoke("addAppForUser", new object[] {
                        ip,
                        userName,
                        appName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addAppForUserAsync(string ip, string userName, string appName) {
            this.addAppForUserAsync(ip, userName, appName, null);
        }
        
        /// <remarks/>
        public void addAppForUserAsync(string ip, string userName, string appName, object userState) {
            if ((this.addAppForUserOperationCompleted == null)) {
                this.addAppForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAppForUserOperationCompleted);
            }
            this.InvokeAsync("addAppForUser", new object[] {
                        ip,
                        userName,
                        appName}, this.addAppForUserOperationCompleted, userState);
        }
        
        private void OnaddAppForUserOperationCompleted(object arg) {
            if ((this.addAppForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAppForUserCompleted(this, new addAppForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string deleteUser(string ip, string userNameDelete, string adminUserName) {
            object[] results = this.Invoke("deleteUser", new object[] {
                        ip,
                        userNameDelete,
                        adminUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUserAsync(string ip, string userNameDelete, string adminUserName) {
            this.deleteUserAsync(ip, userNameDelete, adminUserName, null);
        }
        
        /// <remarks/>
        public void deleteUserAsync(string ip, string userNameDelete, string adminUserName, object userState) {
            if ((this.deleteUserOperationCompleted == null)) {
                this.deleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserOperationCompleted);
            }
            this.InvokeAsync("deleteUser", new object[] {
                        ip,
                        userNameDelete,
                        adminUserName}, this.deleteUserOperationCompleted, userState);
        }
        
        private void OndeleteUserOperationCompleted(object arg) {
            if ((this.deleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserCompleted(this, new deleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/allUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public getAllUsers allUsers(string ip) {
            object[] results = this.Invoke("allUsers", new object[] {
                        ip});
            return ((getAllUsers)(results[0]));
        }
        
        /// <remarks/>
        public void allUsersAsync(string ip) {
            this.allUsersAsync(ip, null);
        }
        
        /// <remarks/>
        public void allUsersAsync(string ip, object userState) {
            if ((this.allUsersOperationCompleted == null)) {
                this.allUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallUsersOperationCompleted);
            }
            this.InvokeAsync("allUsers", new object[] {
                        ip}, this.allUsersOperationCompleted, userState);
        }
        
        private void OnallUsersOperationCompleted(object arg) {
            if ((this.allUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allUsersCompleted(this, new allUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public userInformation getUserInformation(string ip, string userName) {
            object[] results = this.Invoke("getUserInformation", new object[] {
                        ip,
                        userName});
            return ((userInformation)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInformationAsync(string ip, string userName) {
            this.getUserInformationAsync(ip, userName, null);
        }
        
        /// <remarks/>
        public void getUserInformationAsync(string ip, string userName, object userState) {
            if ((this.getUserInformationOperationCompleted == null)) {
                this.getUserInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInformationOperationCompleted);
            }
            this.InvokeAsync("getUserInformation", new object[] {
                        ip,
                        userName}, this.getUserInformationOperationCompleted, userState);
        }
        
        private void OngetUserInformationOperationCompleted(object arg) {
            if ((this.getUserInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInformationCompleted(this, new getUserInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addAppsToServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string addAppsToServer(string ip, string userName, string password, addApps[] listApps) {
            object[] results = this.Invoke("addAppsToServer", new object[] {
                        ip,
                        userName,
                        password,
                        listApps});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addAppsToServerAsync(string ip, string userName, string password, addApps[] listApps) {
            this.addAppsToServerAsync(ip, userName, password, listApps, null);
        }
        
        /// <remarks/>
        public void addAppsToServerAsync(string ip, string userName, string password, addApps[] listApps, object userState) {
            if ((this.addAppsToServerOperationCompleted == null)) {
                this.addAppsToServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAppsToServerOperationCompleted);
            }
            this.InvokeAsync("addAppsToServer", new object[] {
                        ip,
                        userName,
                        password,
                        listApps}, this.addAppsToServerOperationCompleted, userState);
        }
        
        private void OnaddAppsToServerOperationCompleted(object arg) {
            if ((this.addAppsToServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAppsToServerCompleted(this, new addAppsToServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAppsForServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string deleteAppsForServer(string ip, string userName, string password, string[] listApps) {
            object[] results = this.Invoke("deleteAppsForServer", new object[] {
                        ip,
                        userName,
                        password,
                        listApps});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAppsForServerAsync(string ip, string userName, string password, string[] listApps) {
            this.deleteAppsForServerAsync(ip, userName, password, listApps, null);
        }
        
        /// <remarks/>
        public void deleteAppsForServerAsync(string ip, string userName, string password, string[] listApps, object userState) {
            if ((this.deleteAppsForServerOperationCompleted == null)) {
                this.deleteAppsForServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAppsForServerOperationCompleted);
            }
            this.InvokeAsync("deleteAppsForServer", new object[] {
                        ip,
                        userName,
                        password,
                        listApps}, this.deleteAppsForServerOperationCompleted, userState);
        }
        
        private void OndeleteAppsForServerOperationCompleted(object arg) {
            if ((this.deleteAppsForServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAppsForServerCompleted(this, new deleteAppsForServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllAppsOnPC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAllAppsOnPC(string ip) {
            object[] results = this.Invoke("getAllAppsOnPC", new object[] {
                        ip});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllAppsOnPCAsync(string ip) {
            this.getAllAppsOnPCAsync(ip, null);
        }
        
        /// <remarks/>
        public void getAllAppsOnPCAsync(string ip, object userState) {
            if ((this.getAllAppsOnPCOperationCompleted == null)) {
                this.getAllAppsOnPCOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAppsOnPCOperationCompleted);
            }
            this.InvokeAsync("getAllAppsOnPC", new object[] {
                        ip}, this.getAllAppsOnPCOperationCompleted, userState);
        }
        
        private void OngetAllAppsOnPCOperationCompleted(object arg) {
            if ((this.getAllAppsOnPCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAppsOnPCCompleted(this, new getAllAppsOnPCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WS_Login {
        
        private okLogin okLoginField;
        
        private error errorField;
        
        /// <remarks/>
        public okLogin okLogin {
            get {
                return this.okLoginField;
            }
            set {
                this.okLoginField = value;
            }
        }
        
        /// <remarks/>
        public error error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class okLogin {
        
        private string nameField;
        
        private string mailField;
        
        private string[] appListField;
        
        private string keyField;
        
        private string imgField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string mail {
            get {
                return this.mailField;
            }
            set {
                this.mailField = value;
            }
        }
        
        /// <remarks/>
        public string[] appList {
            get {
                return this.appListField;
            }
            set {
                this.appListField = value;
            }
        }
        
        /// <remarks/>
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string img {
            get {
                return this.imgField;
            }
            set {
                this.imgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class addApps {
        
        private string pathExeFileField;
        
        private string nameAppField;
        
        /// <remarks/>
        public string pathExeFile {
            get {
                return this.pathExeFileField;
            }
            set {
                this.pathExeFileField = value;
            }
        }
        
        /// <remarks/>
        public string nameApp {
            get {
                return this.nameAppField;
            }
            set {
                this.nameAppField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class userInformation {
        
        private string passwordField;
        
        private string mailField;
        
        private string keyField;
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string mail {
            get {
                return this.mailField;
            }
            set {
                this.mailField = value;
            }
        }
        
        /// <remarks/>
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class getAllUsers {
        
        private string[] usersListField;
        
        /// <remarks/>
        public string[] usersList {
            get {
                return this.usersListField;
            }
            set {
                this.usersListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class sentLogs {
        
        private int idField;
        
        private string dateLogsField;
        
        private string typeLogField;
        
        private string sourceField;
        
        private string logField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string dateLogs {
            get {
                return this.dateLogsField;
            }
            set {
                this.dateLogsField = value;
            }
        }
        
        /// <remarks/>
        public string typeLog {
            get {
                return this.typeLogField;
            }
            set {
                this.typeLogField = value;
            }
        }
        
        /// <remarks/>
        public string source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string log {
            get {
                return this.logField;
            }
            set {
                this.logField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class jsonSentLogs {
        
        private sentLogs[] jsonLogsField;
        
        /// <remarks/>
        public sentLogs[] jsonLogs {
            get {
                return this.jsonLogsField;
            }
            set {
                this.jsonLogsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class getDB {
        
        private int idField;
        
        private string userNameField;
        
        private string passwordField;
        
        private string mailField;
        
        private string lEVEL_KEYField;
        
        private string sTATUSField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string mail {
            get {
                return this.mailField;
            }
            set {
                this.mailField = value;
            }
        }
        
        /// <remarks/>
        public string LEVEL_KEY {
            get {
                return this.lEVEL_KEYField;
            }
            set {
                this.lEVEL_KEYField = value;
            }
        }
        
        /// <remarks/>
        public string STATUS {
            get {
                return this.sTATUSField;
            }
            set {
                this.sTATUSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class jsonSentDB {
        
        private getDB[] dbField;
        
        /// <remarks/>
        public getDB[] db {
            get {
                return this.dbField;
            }
            set {
                this.dbField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class getAllApps {
        
        private string[] allAppListField;
        
        /// <remarks/>
        public string[] allAppList {
            get {
                return this.allAppListField;
            }
            set {
                this.allAppListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class error {
        
        private string msgField;
        
        /// <remarks/>
        public string msg {
            get {
                return this.msgField;
            }
            set {
                this.msgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getAllAppsForUsersCompletedEventHandler(object sender, getAllAppsForUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAppsForUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAppsForUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void runAppCompletedEventHandler(object sender, runAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WS_Login Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WS_Login)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getAllAppsForUserCompletedEventHandler(object sender, getAllAppsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAppsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAppsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getAllApps Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getAllApps)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void logoutCompletedEventHandler(object sender, logoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getDBCompletedEventHandler(object sender, getDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jsonSentDB Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jsonSentDB)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getLogsCompletedEventHandler(object sender, getLogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public jsonSentLogs Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((jsonSentLogs)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void createUsersCompletedEventHandler(object sender, createUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void changeAccountCompletedEventHandler(object sender, changeAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void allAppsCompletedEventHandler(object sender, allAppsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class allAppsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal allAppsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getAllApps Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getAllApps)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteAppsFromUserCompletedEventHandler(object sender, deleteAppsFromUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAppsFromUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAppsFromUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void addAppForUserCompletedEventHandler(object sender, addAppForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAppForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAppForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteUserCompletedEventHandler(object sender, deleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void allUsersCompletedEventHandler(object sender, allUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class allUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal allUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getAllUsers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getAllUsers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getUserInformationCompletedEventHandler(object sender, getUserInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void addAppsToServerCompletedEventHandler(object sender, addAppsToServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAppsToServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAppsToServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteAppsForServerCompletedEventHandler(object sender, deleteAppsForServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAppsForServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAppsForServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getAllAppsOnPCCompletedEventHandler(object sender, getAllAppsOnPCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAppsOnPCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAppsOnPCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591